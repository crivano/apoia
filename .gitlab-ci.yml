stages:
  - prepare
  - build
  - release
  - deploy

# Ambiente de homologação na AWS
.env-eks-hml-01:
  environment:
    name: eks-hml-01
    deployment_tier: staging
    kubernetes:
      namespace: negociais

# Ambiente de produção na AWS
.env-eks-prd-01:
  environment:
    name: eks-prd-01
    deployment_tier: production
    kubernetes:
      namespace: negociais

.prepare-job-template:
  stage: prepare
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  dependencies: []
  artifacts:
    paths: [ "kubernetes/" ]
  environment:
    action: prepare
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kustomize edit set namespace "$KUBE_NAMESPACE"
    - kustomize edit set image "registry.cnj.jus.br/pdpj/apoia:$CI_COMMIT_REF_NAME"
    - kustomize edit add annotation --force "app.gitlab.com/app:${CI_PROJECT_PATH_SLUG}"
      "app.gitlab.com/env:${CI_ENVIRONMENT_SLUG}" "app.gitlab.com/commit-short-sha:${CI_COMMIT_SHORT_SHA}"
    - kubectl apply --dry-run=client -k .

prepare-eks-hml-01:
  extends:
    - .prepare-job-template
    - .env-eks-hml-01

prepare-eks-prd-01:
  extends:
    - .prepare-job-template
    - .env-eks-prd-01

docker-image:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$NEXUS_USERNAME" -p "$NEXUS_PASSWORD" registry.cnj.jus.br
  script:
    - docker build --pull --tag "registry.cnj.jus.br/pdpj/apoia:$CI_COMMIT_REF_NAME" --tag "registry.cnj.jus.br/pdpj/apoia:latest" -f Dockerfile "$CI_PROJECT_DIR"
    - docker push "registry.cnj.jus.br/pdpj/apoia:$CI_COMMIT_REF_NAME"
    - docker push "registry.cnj.jus.br/pdpj/apoia:latest"

release-job:
  stage: release
  image:
    name: registry.gitlab.com/gitlab-org/release-cli:latest
    entrypoint: [ "" ]
  dependencies: []
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    GIT_STRATEGY: none
  script:
    - release-cli create --tag-name "${CI_COMMIT_TAG}" --description "${CI_COMMIT_MESSAGE}"

.deploy-job-template:
  stage: deploy
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  variables:
    GIT_STRATEGY: none
  retry:
    max: 2
    when: stuck_or_timeout_failure
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kubectl apply -k . || (kubectl delete --ignore-not-found --wait -k . && kubectl apply -k .)

deploy-eks-hml-01:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  extends:
    - .deploy-job-template
    - .env-eks-hml-01
  dependencies: [ "prepare-eks-hml-01" ]

deploy-eks-prd-01:
  rules:
    - if: $CI_COMMIT_TAG
  extends:
    - .deploy-job-template
    - .env-eks-prd-01
  dependencies: [ "prepare-eks-prd-01" ]
