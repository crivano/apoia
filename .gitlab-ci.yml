#
## Stages
stages:
#  - analyse
#  - package
  - prepare
  - build
  - release
  - deploy

#
## stage: package
npm-build:
  stage: package
  interruptible: true
  image:
    name: node:20-alpine
    entrypoint: [ "" ]
  cache:
    key: "${CI_PROJECT_ID}-nodejs"
    paths:
      - node_modules/
  artifacts:
    paths:
      - dist/apoia/
  before_script:
    - npm install
  script:
    - npm run build:dist

#
## Stage: build
docker-build:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$NEXUS_USERNAME" -p "$NEXUS_PASSWORD" registry.cnj.jus.br
  script:
    - docker build --pull -t "registry.cnj.jus.br/pdpj/apoia:$CI_COMMIT_REF_NAME" -f Dockerfile "$CI_PROJECT_DIR"
    - docker push "registry.cnj.jus.br/pdpj/apoia:$CI_COMMIT_REF_NAME"
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: $CI_COMMIT_TAG

#
## Environments
.env-pdpj-hml:
  environment:
    name: eks-hml-01
    deployment_tier: staging
    kubernetes:
      namespace: negociais
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'

.env-pdpj-prd:
  environment:
    name: eks-prd-01
    deployment_tier: production
    kubernetes:
      namespace: negociais
  rules:
    - if: $CI_COMMIT_TAG

#
## Stage: prepare
.prepare-template:
  stage: prepare
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  dependencies: []
  artifacts:
    paths: [ "kubernetes/" ]
  environment:
    action: prepare
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - sed -i -e "s/-CI_COMMIT_REF_NAME/-$CI_COMMIT_REF_NAME/g" kustomization.yml
    - kustomize edit set namespace "${KUBE_NAMESPACE}"
    - kustomize edit set image "registry.cnj.jus.br/pdpj/apoia:$CI_COMMIT_REF_NAME"
    - kustomize edit add annotation --force "app.gitlab.com/app:${CI_PROJECT_PATH_SLUG}" "app.gitlab.com/env:${CI_ENVIRONMENT_SLUG}" "app.gitlab.com/commit-short-sha:${CI_COMMIT_SHORT_SHA}"
    - kubectl apply --dry-run=client -k .

prepare-pdpj-hml:
  extends:
    - .prepare-template
    - .env-pdpj-hml

prepare-pdpj-prd:
  extends:
    - .prepare-template
    - .env-pdpj-prd

#
## Stage: release
release-prd:
  stage: release
  image:
    name: registry.gitlab.com/gitlab-org/release-cli:latest
    entrypoint: [ "" ]
  dependencies: []
  variables:
    GIT_STRATEGY: none
  script:
    - release-cli create --tag-name "${CI_COMMIT_TAG}" --description "${CI_COMMIT_MESSAGE}"
  rules:
    - if: $CI_COMMIT_TAG

#
## Stage: deploy
.deploy-template:
  stage: deploy
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  variables:
    GIT_STRATEGY: none
  retry:
    max: 2
    when: stuck_or_timeout_failure
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kubectl apply -k . || (kubectl delete --ignore-not-found --wait -k . && kubectl apply -k .)

deploy-app-hml:
  extends:
    - .deploy-template
    - .env-pdpj-hml
  dependencies: [ "prepare-pdpj-hml" ]

deploy-app-prd:
  extends:
    - .deploy-template
    - .env-pdpj-prd
  dependencies: [ "prepare-pdpj-prd" ]

#
## Stop jobs
.stop-template:
  extends:
    - .deploy-template
  when: manual
  allow_failure: true
  environment:
    action: stop
  script:
    - kubectl delete --ignore-not-found --wait -k "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"

remove-app-hml:
  extends:
    - .stop-template
    - .env-pdpj-hml
  dependencies: [ "prepare-pdpj-hml" ]

remove-app-prd:
  extends:
    - .stop-template
    - .env-pdpj-prd
  dependencies: [ "prepare-pdpj-prd" ]
